swagger: "2.0"
info:
  description: "Sample Cart microservice"
  version: "0.1.0"
  title: "Cart"
schemes:
- "http"
tags:
- name: "Product"
  description: "Endpoints related to products"
- name: "Cart"
  description: "Endpoints related to shopping cart"
paths:
  /v1/product:
    post:
      tags:
      - Product
      summary: "Add a new product"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Product to add to store"
        required: true
        schema:
          $ref: "#/definitions/ProductInput"
      responses:
        200:
          description: "Product created"
          schema:
            $ref: "#/definitions/ProductId"
        400:
          description: "Invalid input"
    get:
      tags:
      - Product
      summary: "Get paginated list of products"
      parameters:
      - in: "query"
        name: "page"
        type: integer
      produces:
      - "application/json"
      responses:
        200:
          description: "List of products"
          schema:
            $ref: "#/definitions/ProductList"
  /v1/product/{id}:
    delete:
      tags:
      - Product
      summary: "Remove product"
      parameters:
      - in: "path"
        name: "id"
        type: "string"
        required: true
      responses:
        204:
          description: "Product was deleted"
    patch:
      tags:
      - Product
      summary: "Update product properties"
      consumes:
      - "application/json"
      parameters:
      - in: "path"
        name: "id"
        type: "string"
        format: "uuid"
        required: true
      - in: "body"
        name: "body"
        description: "Product to add to store"
        required: true
        schema:
          $ref: "#/definitions/ProductInput"
      responses:
        204:
          description: "Product was updated"
        404:
          description: "Product not found"
  /v1/cart:
    post:
      tags:
      - Cart
      summary: "Create new cart"
      produces:
      - "application/json"
      responses:
        200:
          description: "Cart created"
          schema:
            $ref: "#/definitions/CartId"
  /v1/cart/{cartId}:
    get:
      tags:
      - Cart
      summary: "Get contents of cart"
      parameters:
      - in: "path"
        name: "cartId"
        type: "string"
        format: "uuid"
        required: true
      produces:
      - "application/json"
      responses:
        200:
          description: "Cart contents"
          schema:
            $ref: "#/definitions/Cart"
        404:
          description: "Cart not found"
  /v1/cart/{cartId}/product:
    post:
      tags:
      - Cart
      summary: "Insert product into cart"
      parameters:
      - in: "path"
        name: "cartId"
        type: "string"
        format: "uuid"
        required: true
      - in: "body"
        name: "body"
        description: "Product to add to cart"
        required: true
        schema:
          $ref: "#/definitions/CartProductInput"
      responses:
        204:
          description: "Product successfully added to cart"
        403:
          description: "Cart capacity exceeded"
        404:
          description: "Cart not found"
  /v1/cart/{cartId}/product/{productId}:
    delete:
      tags:
      - Cart
      summary: "Remove product from cart"
      parameters:
      - in: "path"
        name: "cartId"
        type: "string"
        format: "uuid"
        required: true
      - in: "path"
        name: "productId"
        type: "string"
        format: "uuid"
        required: true
      responses:
        204:
          description: "Product is gone from cart"
        404:
          description: "Cart not found"

definitions:
  Price:
    type: "object"
    required:
    - amount
    - divisor
    - currency
    description: |
      models product price as "amount/divisor in currency",
      e.g. 1286/100 PLN = 12,86 PLN
    properties:
      amount:
        type: "integer"
      divisor:
        type: "integer"
      currency:
        type: "string"
        enum:
        - PLN
  CartId:
    type: "object"
    required:
    - id
    properties:
      id:
        type: "string"
        format: "uuid"
  CartProduct:
    type: "object"
    required:
    - id
    - name
    - amount
    - unitPrice
    properties:
      id:
        type: "string"
        format: "uuid"
      name:
        type: "string"
      amount:
        type: "integer"
      unitPrice:
        $ref: "#/definitions/Price"
  Cart:
    type: "object"
    required:
    - products
    properties:
      totalPrice:
        $ref: "#/definitions/Price"
      totalPriceFormatted:
        type: "string"
      products:
        type: "array"
        items:
          $ref: "#/definitions/CartProduct"
  CartProductInput:
    type: "object"
    required:
    - productId
    properties:
      productId:
        type: "string"
        format: "uuid"
  ProductId:
    type: "object"
    required:
    - id
    properties:
      id:
        description: "product id"
        type: "string"
        format: "uuid"
  Link:
    type: "object"
    required:
    - href
    properties:
      href:
        description: "related url"
        type: "string"
  ProductInput:
    type: "object"
    properties:
      name:
        type: "string"
      price:
        $ref: "#/definitions/Price"
  Product:
    type: "object"
    required:
    - id
    - name
    - price
    properties:
      id:
        type: "string"
        format: "uuid"
      name:
        type: "string"
      price:
        $ref: "#/definitions/Price"
  ProductListLinks:
    type: "object"
    required:
    - self
    properties:
      self:
        $ref: "#/definitions/Link"
      next:
        $ref: "#/definitions/Link"
      previous:
        $ref: "#/definitions/Link"
  ProductList:
    type: "object"
    required:
    - products
    - _links
    properties:
      products:
        type: "array"
        items:
          $ref: "#/definitions/Product"
      _links:
        $ref: "#/definitions/ProductListLinks"
